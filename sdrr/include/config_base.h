// Contains configuration definitions and types which are used by the
// configuration generated by `sdrr-gen`. 

// Copyright (C) 2025 Piers Finlayson <piers@piers.rocks>
//
// MIT License

#ifndef CONFIG_BASE_H
#define CONFIG_BASE_H

#include <stdint.h>

// ROM image sizes by type (F1 family)
#define ROM_IMAGE_SIZE_2316 2048
#define ROM_IMAGE_SIZE_2332 4096
#define ROM_IMAGE_SIZE_2364 8192

// Maximum ROM image size (F4 family uses a single size for all ROM types)
#define ROM_IMAGE_SIZE 16384

// ROM type enumeration
typedef enum {
    ROM_TYPE_2316,
    ROM_TYPE_2332,
    ROM_TYPE_2364
} sdrr_rom_type_t;

// CS state enumeration
typedef enum {
    CS_ACTIVE_LOW,
    CS_ACTIVE_HIGH,
    CS_NOT_USED
} sdrr_cs_state_t;

// ROM serving algorithm
typedef enum {
    SERVE_ORIG,  // Original ROM serving algorithm
} sdrr_serve_t;

// ROM information structure
typedef struct {
    const uint8_t* data;        // Pointer to ROM data
    uint16_t size;              // Actual ROM size (varies by type on F1, always 16384 on F4)
    sdrr_rom_type_t rom_type;   // ROM type
    sdrr_cs_state_t cs1_state;  // CS1 state
    sdrr_cs_state_t cs2_state;  // CS2 state
    sdrr_cs_state_t cs3_state;  // CS3 state
#if defined(BOOT_LOGGING)
    const char* filename;       // Source filename (BOOT_LOGGING only)
#endif // BOOT_LOGGING
    sdrr_serve_t serve;         // ROM serving algorithm
} sdrr_rom_info_t;

#endif // CONFIG_BASE_H